{"version":3,"file":"GlslCanvas.min.js","sources":["../node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/xtend/immutable.js","../node_modules/xhr/index.js","../src/gl/gl.js","../src/tools/common.js","../src/tools/mixin.js","../src/gl/Texture.js","../src/GlslCanvas.js"],"sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n        if (xhr.responseType === \"document\") {\n            return xhr.responseXML\n        }\n        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n            return xhr.responseXML\n        }\n    } catch (e) {}\n\n    return null\n}\n\nfunction noop() {}\n","let lastError = '';\n\n/**\n * Creates the HTLM for a failure message\n * @param {string} canvasContainerId id of container of th\n *        canvas.\n * @return {string} The html.\n */\nfunction makeFailHTML(msg) {\n    return `\n<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>\n<td align=\"center\">\n<div style=\"display: table-cell; vertical-align: middle;\">\n<div style=\"\">` + msg + `</div>\n</div>\n</td></tr></table>\n`;\n}\n\n/**\n * Message for getting a webgl browser\n * @type {string}\n */\nlet GET_A_WEBGL_BROWSER = `\n\tThis page requires a browser that supports WebGL.<br/>\n\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>\n`;\n\n/**\n * Message for need better hardware\n * @type {string}\n */\nlet OTHER_PROBLEM = `\n\tIt does not appear your computer can support WebGL.<br/>\n\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>\n`;\n\n/**\n * Code to return in `onError` callback when the browser doesn't support webgl\n * @type {number}\n */\nexport const ERROR_BROWSER_SUPPORT = 1;\n\n/**\n * Code to return in `onError` callback there's any other problem related to webgl\n * @type {number}\n */\nexport const ERROR_OTHER = 2;\n\n/**\n * Creates a webgl context. If creation fails it will\n * change the contents of the container of the <canvas>\n * tag to an error message with the correct links for WebGL,\n * unless `onError` option is defined to a callback,\n * which allows for custom error handling..\n * @param {Element} canvas. The canvas element to create a\n *     context from.\n * @param {WebGLContextCreationAttributes} optAttribs Any\n *     creation attributes you want to pass in.\n * @return {WebGLRenderingContext} The created context.\n */\nexport function setupWebGL (canvas, optAttribs, onError) {\n    function showLink(str) {\n        let container = canvas.parentNode;\n        if (container) {\n            container.innerHTML = makeFailHTML(str);\n        }\n    }\n\n    function handleError(errorCode, msg) {\n        if (typeof onError === 'function') {\n            onError(errorCode);\n        } else {\n            showLink(msg);\n        }\n    }\n\n    if (!window.WebGLRenderingContext) {\n        handleError(ERROR_BROWSER_SUPPORT, GET_A_WEBGL_BROWSER);\n        return null;\n    }\n\n    let context = create3DContext(canvas, optAttribs);\n    if (!context) {\n        handleError(ERROR_OTHER, OTHER_PROBLEM);\n    } else {\n        context.getExtension('OES_standard_derivatives');\n    }\n    return context;\n}\n\n/**\n * Creates a webgl context.\n * @param {!Canvas} canvas The canvas tag to get context\n *     from. If one is not passed in one will be created.\n * @return {!WebGLContext} The created context.\n */\nexport function create3DContext(canvas, optAttribs) {\n    let names = ['webgl', 'experimental-webgl'];\n    let context = null;\n    for (var ii = 0; ii < names.length; ++ii) {\n        try {\n            context = canvas.getContext(names[ii], optAttribs);\n        } catch(e) {\n            if (context) {\n                break;\n            }\n        }\n    }\n    return context;\n}\n\n/*\n *\tCreate a Vertex of a specific type (gl.VERTEX_SHADER/)\n */\nexport function createShader(main, source, type, offset) {\n    let gl = main.gl;\n\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    let compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (!compiled) {\n        // Something went wrong during compilation; get the error\n        lastError = gl.getShaderInfoLog(shader);\n        console.error('*** Error compiling shader ' + shader + ':' + lastError);\n        main.trigger('error', {\n            shader: shader,\n            source: source,\n            type: type,\n            error: lastError,\n            offset: offset || 0\n        });\n        gl.deleteShader(shader);\n        return null;\n    }\n\n    return shader;\n}\n\n/**\n * Loads a shader.\n * @param {!WebGLContext} gl The WebGLContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {function(string): void) opt_errorCallback callback for errors.\n * @return {!WebGLShader} The created shader.\n */\nexport function createProgram(main, shaders, optAttribs, optLocations) {\n    let gl = main.gl;\n\n    let program = gl.createProgram();\n    for (let ii = 0; ii < shaders.length; ++ii) {\n        gl.attachShader(program, shaders[ii]);\n    }\n    if (optAttribs) {\n        for (let ii = 0; ii < optAttribs.length; ++ii) {\n            gl.bindAttribLocation(\n            program,\n            optLocations ? optLocations[ii] : ii,\n            optAttribs[ii]);\n        }\n    }\n    gl.linkProgram(program);\n\n    // Check the link status\n    let linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n        // something went wrong with the link\n        lastError = gl.getProgramInfoLog(program);\n        console.log('Error in program linking:' + lastError);\n        gl.deleteProgram(program);\n        return null;\n    }\n    return program;\n}\n\n// By Brett Camber on\n// https://github.com/tangrams/tangram/blob/master/src/gl/glsl.js\nexport function parseUniforms(uniforms, prefix = null) {\n    let parsed = [];\n\n    for (let name in uniforms) {\n        let uniform = uniforms[name];\n        let u;\n\n        if (prefix) {\n            name = prefix + '.' + name;\n        }\n\n        // Single float\n        if (typeof uniform === 'number') {\n            parsed.push({\n                type: 'float',\n                method: '1f',\n                name,\n                value: uniform\n            });\n        }\n        // Array: vector, array of floats, array of textures, or array of structs\n        else if (Array.isArray(uniform)) {\n            // Numeric values\n            if (typeof uniform[0] === 'number') {\n                // float vectors (vec2, vec3, vec4)\n                if (uniform.length === 1) {\n                    parsed.push({\n                        type: 'float',\n                        method: '1f',\n                        name,\n                        value: uniform\n                    });\n                }\n                // float vectors (vec2, vec3, vec4)\n                else if (uniform.length >= 2 && uniform.length <= 4) {\n                    parsed.push({\n                        type: 'vec' + uniform.length,\n                        method: uniform.length + 'fv',\n                        name,\n                        value: uniform\n                    });\n                }\n                // float array\n                else if (uniform.length > 4) {\n                    parsed.push({\n                        type: 'float[]',\n                        method: '1fv',\n                        name: name + '[0]',\n                        value: uniform\n                    });\n                }\n                // TODO: assume matrix for (typeof == Float32Array && length == 16)?\n            }\n            // Array of textures\n            else if (typeof uniform[0] === 'string') {\n                parsed.push({\n                    type: 'sampler2D',\n                    method: '1i',\n                    name: name,\n                    value: uniform\n                });\n            }\n            // Array of arrays - but only arrays of vectors are allowed in this case\n            else if (Array.isArray(uniform[0]) && typeof uniform[0][0] === 'number') {\n                // float vectors (vec2, vec3, vec4)\n                if (uniform[0].length >= 2 && uniform[0].length <= 4) {\n                    // Set each vector in the array\n                    for (u = 0; u < uniform.length; u++) {\n                        parsed.push({\n                            type: 'vec' + uniform[0].length,\n                            method: uniform[u].length + 'fv',\n                            name: name + '[' + u + ']',\n                            value: uniform[u]\n                        });\n                    }\n                }\n                // else error?\n            }\n            // Array of structures\n            else if (typeof uniform[0] === 'object') {\n                for (u = 0; u < uniform.length; u++) {\n                    // Set each struct in the array\n                    parsed.push(...parseUniforms(uniform[u], name + '[' + u + ']'));\n                }\n            }\n        }\n        // Boolean\n        else if (typeof uniform === 'boolean') {\n            parsed.push({\n                type: 'bool',\n                method: '1i',\n                name,\n                value: uniform\n            });\n        }\n        // Texture\n        else if (typeof uniform === 'string') {\n            parsed.push({\n                type: 'sampler2D',\n                method: '1i',\n                name,\n                value: uniform\n            });\n        }\n        // Structure\n        else if (typeof uniform === 'object') {\n            // Set each field in the struct\n            parsed.push(...parseUniforms(uniform, name));\n        }\n        // TODO: support other non-float types? (int, etc.)\n    }\n    return parsed;\n}\n","export function isCanvasVisible(canvas) {\n    let bound = canvas.getBoundingClientRect();\n    return\t((bound.top + bound.height) > 0) &&\n        (bound.top < (window.innerHeight || document.documentElement.clientHeight));\n}\n\nexport function isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nexport function isSafari () {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n};\n\nexport function nextHighestPowerOfTwo(x) {\n    --x;\n    for (let i = 1; i < 32; i <<= 1) {\n        x = x | x >> i;\n    }\n    return x + 1;\n}\n\nexport function FormatNumberLength(num, length) {\n    let r = num.toString();\n    while (r.length < length) {\n        r = '0' + r;\n    }\n    return r;\n}\n\nexport function getMousePos(canvas, evt) {\n    let rect = canvas.getBoundingClientRect();\n    return {\n        x: evt.clientX - rect.left,\n        y: evt.clientY - rect.top\n    };\n}\n\nexport function isDiff(a, b) {\n    if (a && b) {\n        return a.toString() !== b.toString();\n    }\n    return false;\n}\n\nexport function getFile(url) {\n    let httpRequest = new XMLHttpRequest();\n    httpRequest.open(\"GET\", url, false);\n    httpRequest.send();\n    if (httpRequest.status == 200)\n        return httpRequest.responseText;\n    else\n        return \"\";\n}\n\nexport function subscribeMixin (target) {\n    var listeners = new Set();\n\n    return Object.assign(target, {\n\n        subscribe(listener) {\n            listeners.add(listener);\n        },\n\n        on(type, f) {\n            let listener = {};\n            listener[type] = f;\n            listeners.add(listener);\n        },\n\n        unsubscribe(listener) {\n            listeners.delete(listener);\n        },\n\n        unsubscribeAll() {\n            listeners.clear();\n        },\n\n        trigger(event, ...data) {\n            for (var listener of listeners) {\n                if (typeof listener[event] === 'function') {\n                    listener[event](...data);\n                }\n            }\n        }\n    });\n}\n","export function subscribeMixin (target) {\n    var listeners = new Set();\n\n    return Object.assign(target, {\n\n        on(type, f) {\n            let listener = {};\n            listener[type] = f;\n            listeners.add(listener);\n        },\n\n        off(type, f) {\n            if (f) {\n                let listener = {};\n                listener[type] = f;\n                listeners.delete(listener);\n            }\n            else {\n                for (let item of listeners) {\n                    for (let key of Object.keys(item)) {\n                        if (key === type) {\n                            listeners.delete(item);\n                            return;\n                        }\n                    }\n                }\n            }\n        },\n\n        listSubscriptions() {\n            for (let item of listeners) {\n                console.log(item);\n            }\n        },\n\n        subscribe(listener) {\n            listeners.add(listener);\n        },\n\n        unsubscribe(listener) {\n            listeners.delete(listener);\n        },\n\n        unsubscribeAll() {\n            listeners.clear();\n        },\n\n        trigger(event, ...data) {\n            for (var listener of listeners) {\n                if (typeof listener[event] === 'function') {\n                    listener[event](...data);\n                }\n            }\n        }\n    });\n}\n","// Texture management\nimport { isPowerOf2, isSafari } from '../tools/common';\nimport { subscribeMixin } from '../tools/mixin';\n\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\nexport default class Texture {\n    constructor(gl, name, options = {}) {\n        subscribeMixin(this);\n\n        this.gl = gl;\n        this.texture = gl.createTexture();\n        if (this.texture) {\n            this.valid = true;\n        }\n        this.bind();\n\n        this.name = name;\n        this.source = null;\n        this.sourceType = null;\n        this.loading = null; // a Promise object to track the loading state of this texture\n\n        // Default to a 1-pixel black texture so we can safely render while we wait for an image to load\n        // See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\n        this.setData(1, 1, new Uint8Array([0, 0, 0, 255]), { filtering: 'linear' });\n        this.setFiltering(options.filtering);\n\n        this.load(options);\n    }\n\n    // Destroy a single texture instance\n    destroy() {\n        if (!this.valid) {\n            return;\n        }\n        this.gl.deleteTexture(this.texture);\n        this.texture = null;\n        delete this.data;\n        this.data = null;\n        this.valid = false;\n    }\n\n    bind(unit) {\n        if (!this.valid) {\n            return;\n        }\n        if (typeof unit === 'number') {\n            if (Texture.activeUnit !== unit) {\n                this.gl.activeTexture(this.gl.TEXTURE0 + unit);\n                Texture.activeUnit = unit;\n            }\n        }\n        if (Texture.activeTexture !== this.texture) {\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n            Texture.activeTexture = this.texture;\n        }\n    }\n\n    load(options = {}) {\n        this.loading = null;\n\n        if (typeof options.url === 'string') {\n            if (this.url === undefined || options.url !== this.url) {\n                this.setUrl(options.url, options);\n            }\n        }\n        else if (options.element) {\n            this.setElement(options.element, options);\n        }\n        else if (options.data && options.width && options.height) {\n            this.setData(options.width, options.height, options.data, options);\n        }\n    }\n\n    // Sets texture from an url\n    setUrl(url, options = {}) {\n        if (!this.valid) {\n            return;\n        }\n\n        this.url = url; // save URL reference (will be overwritten when element is loaded below)\n        this.source = this.url;\n        this.sourceType = 'url';\n\n        this.loading = new Promise((resolve, reject) => {\n            let ext = url.split('.').pop().toLowerCase();\n            let isVideo = (ext === 'ogv' || ext === 'webm' || ext === 'mp4');\n\n            let element = undefined\n            if (isVideo) {\n                element = document.createElement('video');\n                element.autoplay = true;\n                \n                \n                element.muted = true; /* required for modern browsers to autoplay video */\n                setTimeout(function () {\n                    element.play() /* doesn't block promise but needs a more elegant solution */\n                }, 1);\n                \n                options.filtering = 'nearest';\n                // element.preload = 'auto';\n                // element.style.display = 'none';\n                // document.body.appendChild(element);\n            } else {\n                element = new Image();\n            }\n\n            element.onload = () => {\n                try {\n                    this.setElement(element, options);\n                }\n                catch (e) {\n                    console.log(`Texture '${this.name}': failed to load url: '${this.source}'`, e, options);\n                }\n                resolve(this);\n            };\n            element.onerror = e => {\n                // Warn and resolve on error\n                console.log(`Texture '${this.name}': failed to load url: '${this.source}'`, e, options);\n                resolve(this);\n            };\n\n            // Safari has a bug loading data-URL elements with CORS enabled, so it must be disabled in that case\n            // https://bugs.webkit.org/show_bug.cgi?id=123978\n            if (!(isSafari() && this.source.slice(0, 5) === 'data:')) {\n                element.crossOrigin = 'anonymous';\n            }\n\n            element.src = this.source;\n            if (isVideo) {\n                this.setElement(element, options);\n            }\n        });\n        return this.loading;\n    }\n\n    // Sets texture to a raw image buffer\n    setData(width, height, data, options = {}) {\n        this.width = width;\n        this.height = height;\n\n        this.source = data;\n        this.sourceType = 'data';\n\n        this.update(options);\n        this.setFiltering(options);\n\n        this.loading = Promise.resolve(this);\n        return this.loading;\n    }\n\n    // Sets the texture to track a element (canvas/image)\n    setElement(element, options) {\n        let el = element;\n\n        // a string element is interpeted as a CSS selector\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        if (element instanceof HTMLCanvasElement ||\n            element instanceof HTMLImageElement ||\n            element instanceof HTMLVideoElement) {\n            this.source = element;\n            this.sourceType = 'element';\n\n            if (element instanceof HTMLVideoElement) {\n                this.width = this.source.videoWidth;\n                this.height = this.source.videoHeight;\n                element.addEventListener('canplaythrough', () => {\n                    this.intervalID = setInterval(()=>{\n                        this.update(options);\n                    }, 15);\n                }, true);\n                element.addEventListener('ended', () => {\n                    element.currentTime = 0;\n                    element.play();\n                }, true);\n            } else {\n                this.update(options);\n            }            \n            this.setFiltering(options);\n        }\n        else {\n            let msg = `the 'element' parameter (\\`element: ${JSON.stringify(el)}\\`) must be a CSS `;\n            msg += `selector string, or a <canvas>, <image> or <video> object`;\n            console.log(`Texture '${this.name}': ${msg}`, options);\n        }\n\n        this.loading = Promise.resolve(this);\n        return this.loading;\n    }\n\n    // Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\n    update(options = {}) {\n        if (!this.valid) {\n            return;\n        }\n\n        this.bind();\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? false : true));\n        this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);\n\n        // Image or Canvas element\n        if (this.sourceType === 'element' &&\n            ((this.source instanceof HTMLCanvasElement) || \n             (this.source instanceof HTMLVideoElement) ||\n             (this.source instanceof HTMLImageElement && this.source.complete))) {\n            if (this.source instanceof HTMLVideoElement) {\n                this.width = this.source.videoWidth;\n                this.height = this.source.videoHeight;\n            } else {\n                this.width = this.source.width;\n                this.height = this.source.height;\n            }\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.source);\n        }\n        // Raw image buffer\n        else if (this.sourceType === 'data') {\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.width, this.height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.source);\n        }\n        this.trigger('loaded', this);\n    }\n\n    // Determines appropriate filtering mode\n    setFiltering (options = {}) {\n        if (!this.valid) {\n            return;\n        }\n\n        this.powerOf2 = isPowerOf2(this.width) && isPowerOf2(this.height);\n        let defualtFilter = (this.powerOf2 ? 'mipmap' : 'linear');\n        this.filtering = options.filtering || defualtFilter;\n\n        var gl = this.gl;\n        this.bind();\n\n        // For power-of-2 textures, the following presets are available:\n        // mipmap: linear blend from nearest mip\n        // linear: linear blend from original image (no mips)\n        // nearest: nearest pixel from original image (no mips, 'blocky' look)\n        if (this.powerOf2) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.TEXTURE_WRAP_S || (options.repeat && gl.REPEAT) || gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.TEXTURE_WRAP_T || (options.repeat && gl.REPEAT) || gl.CLAMP_TO_EDGE);\n\n            if (this.filtering === 'mipmap') {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n            else if (this.filtering === 'linear') {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            }\n            else if (this.filtering === 'nearest') {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            }\n        }\n        else {\n            // WebGL has strict requirements on non-power-of-2 textures:\n            // No mipmaps and must clamp to edge\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n            if (this.filtering === 'mipmap') {\n                this.filtering = 'linear';\n            }\n\n            if (this.filtering === 'nearest') {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            }\n            else { // default to linear for non-power-of-2 textures\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            }\n        }\n    }\n}\n\n// Report max texture size for a GL context\nTexture.getMaxTextureSize = function (gl) {\n    return gl.getParameter(gl.MAX_TEXTURE_SIZE);\n};\n\n// Global set of textures, by name\nTexture.activeUnit = -1;\n","/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 Patricio Gonzalez Vivo ( http://www.patriciogonzalezvivo.com )\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport xhr from 'xhr';\nimport { createProgram, createShader, parseUniforms, setupWebGL } from './gl/gl';\nimport Texture from './gl/Texture';\nimport { isCanvasVisible, isDiff, getFile } from './tools/common';\nimport { subscribeMixin } from './tools/mixin';\n\nexport default class GlslCanvas {\n    constructor(canvas, contextOptions, options) {\n        subscribeMixin(this);\n\n        contextOptions = contextOptions || {};\n        options = options || {};\n\n        if (canvas.hasAttribute('data-fullscreen') &&\n            (canvas.getAttribute('data-fullscreen') == \"1\" ||\n            canvas.getAttribute('data-fullscreen') == \"true\" )\n        ) {\n            this.width = window.innerWidth;\n            this.height = window.innerHeight;\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n        } else {\n            this.width = canvas.clientWidth;\n            this.height = canvas.clientHeight;\n        }\n\n        this.canvas = canvas;\n        this.gl = undefined;\n        this.program = undefined;\n        this.textures = {};\n        this.buffers = {};\n        this.uniforms = {};\n        this.vbo = {};\n        this.isValid = false;\n        this.animationFrameRequest = undefined;\n\n        this.BUFFER_COUNT = 0;\n        // this.TEXTURE_COUNT = 0;\n\n        this.vertexString = contextOptions.vertexString || `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\n\nvarying vec2 v_texcoord;\n\nvoid main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    v_texcoord = a_texcoord;\n}\n`;\n        this.fragmentString = contextOptions.fragmentString || `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 v_texcoord;\n\nvoid main(){\n    gl_FragColor = vec4(0.0);\n}\n`;\n\n        // GL Context\n        let gl = setupWebGL(canvas, contextOptions, options.onError);\n        if (!gl) {\n            return;\n        }\n        this.gl = gl;\n        this.timeLoad = this.timePrev = performance.now();\n        this.timeDelta = 0.0;\n        this.forceRender = true;\n        this.paused = false;\n        this.realToCSSPixels = window.devicePixelRatio || 1;\n\n        // Allow alpha\n        canvas.style.backgroundColor = contextOptions.backgroundColor || 'rgba(1,1,1,0)';\n\n        // Load shader\n        if (canvas.hasAttribute('data-fragment')) {\n            this.fragmentString = canvas.getAttribute('data-fragment');\n        }\n        else if (canvas.hasAttribute('data-fragment-url')) {\n            let source = canvas.getAttribute('data-fragment-url');\n            xhr.get(source, (error, response, body) => {\n                this.load(body, this.vertexString);\n            });\n        }\n\n        // Load shader\n        if (canvas.hasAttribute('data-vertex')) {\n            this.vertexString = canvas.getAttribute('data-vertex');\n        }\n        else if (canvas.hasAttribute('data-vertex-url')) {\n            let source = canvas.getAttribute('data-vertex-url');\n            xhr.get(source, (error, response, body) => {\n                this.load(this.fragmentString, body);\n            });\n        }\n\n        this.load();\n\n        if (!this.program) {\n            return;\n        }\n\n        // Define Vertex buffer\n        let texCoordsLoc = gl.getAttribLocation(this.program, 'a_texcoord');\n        this.vbo.texCoords = gl.createBuffer();\n        this.gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo.texCoords);\n        this.gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        this.gl.enableVertexAttribArray(texCoordsLoc);\n        this.gl.vertexAttribPointer(texCoordsLoc, 2, gl.FLOAT, false, 0, 0);\n\n        let verticesLoc = gl.getAttribLocation(this.program, 'a_position');\n        this.vbo.vertices = gl.createBuffer();\n        this.gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo.vertices);\n        this.gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        this.gl.enableVertexAttribArray(verticesLoc);\n        this.gl.vertexAttribPointer(verticesLoc, 2, gl.FLOAT, false, 0, 0);\n\n        // load TEXTURES\n        if (canvas.hasAttribute('data-textures')) {\n            let imgList = canvas.getAttribute('data-textures').split(',');\n            for (let nImg in imgList) {\n                this.setUniform('u_tex' + nImg, imgList[nImg]);\n            }\n        }\n\n        // ========================== EVENTS\n        let mouse = {\n            x: 0,\n            y: 0\n        };\n        document.addEventListener('mousemove', (e) => {\n            mouse.x = e.clientX || e.pageX;\n            mouse.y = e.clientY || e.pageY;\n        }, false);\n\n        let sandbox = this;\n        function RenderLoop() {\n            if (sandbox.nMouse > 1) {\n                sandbox.setMouse(mouse);\n            }\n\n            if (sandbox.resize()) {\n                sandbox.forceRender = true;\n            }\n            \n            sandbox.render();\n            sandbox.animationFrameRequest = window.requestAnimationFrame(RenderLoop);\n        }\n\n        // Start\n        this.setMouse({ x: 0, y: 0 });\n        RenderLoop();\n        return this;\n    }\n\n    destroy() {\n        // Stop the animation\n        cancelAnimationFrame(this.animationFrameRequest);\n\n        this.animated = false;\n        this.isValid = false;\n        for (let tex in this.textures) {\n            if (tex.destroy){\n                tex.destroy();\n            }\n        }\n        this.textures = {};\n        for (let att in this.attribs) {\n            this.gl.deleteBuffer(this.attribs[att]);\n        }\n        this.gl.useProgram(null);\n        this.gl.deleteProgram(this.program);\n        for (let key in this.buffers) {\n            const buffer = this.buffers[key];\n            this.gl.deleteProgram(buffer.program);\n        }\n\n        this.program = null;\n        this.gl = null;\n    }\n\n    load (fragString, vertString) {\n\n        // Load vertex shader if there is one\n        if (vertString) {\n            this.vertexString = vertString;\n        }\n\n        // Load fragment shader if there is one\n        if (fragString) {\n            this.fragmentString = fragString;\n        }\n\n        let lines = this.fragmentString.split(/\\r?\\n/);\n        this.fragmentString = \"#define PLATFORM_WEBGL\\n\";\n\n        lines.forEach( (line, i) => {\n            let line_trim = line.trim();\n            if (line_trim.startsWith('#include \\\"lygia') ) {\n                let include_url = line_trim.substring(15);\n                include_url = \"https://lygia.xyz\" + include_url.replace(/\\'|\\\"|\\;|\\s/g,'');\n                this.fragmentString += getFile(include_url) + '\\n';\n            }\n            else {\n                this.fragmentString += line + '\\n';\n            }\n        });\n        \n        this.animated = false;\n        this.nDelta = (this.fragmentString.match(/u_delta/g) || []).length;\n        this.nTime = (this.fragmentString.match(/u_time/g) || []).length;\n        this.nDate = (this.fragmentString.match(/u_date/g) || []).length;\n        this.nMouse = (this.fragmentString.match(/u_mouse/g) || []).length;\n        this.animated = this.nDate > 1 || this.nTime > 1 || this.nMouse > 1;\n\n        let nTextures = this.fragmentString.search(/sampler2D/g);\n        if (nTextures) {\n            let lines = this.fragmentString.split('\\n');\n            for (let i = 0; i < lines.length; i++) {\n                let match = lines[i].match(/uniform\\s*sampler2D\\s*([\\w]*);\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_]*)/i);\n                if (match) {\n                    let ext = match[2].split('.').pop().toLowerCase();\n                    if (match[1] && match[2] &&\n                        (ext === 'jpg' || ext === 'jpeg' || ext === 'png' ||\n                         ext === 'ogv' || ext === 'webm' || ext === 'mp4')) {\n                        this.setUniform(match[1], match[2]);\n                    }\n                }\n                let main = lines[i].match(/\\s*void\\s*main\\s*/g);\n                if (main) {\n                    break;\n                }\n            }\n        }\n\n        let vertexShader = createShader(this, this.vertexString, this.gl.VERTEX_SHADER);\n        let fragmentShader = createShader(this, this.fragmentString, this.gl.FRAGMENT_SHADER);\n\n        // If Fragment shader fails load a empty one to sign the error\n        if (!fragmentShader) {\n            fragmentShader = createShader(this, 'void main(){\\n\\tgl_FragColor = vec4(1.0);\\n}', this.gl.FRAGMENT_SHADER);\n            this.isValid = false;\n        }\n        else {\n            this.isValid = true;\n        }\n\n        // Create and use program\n        let program = createProgram(this, [vertexShader, fragmentShader]);//, [0,1],['a_texcoord','a_position']);\n        this.gl.useProgram(program);\n\n        // Delete shaders\n        // this.gl.detachShader(program, vertexShader);\n        // this.gl.detachShader(program, fragmentShader);\n        this.gl.deleteShader(vertexShader);\n        this.gl.deleteShader(fragmentShader);\n\n        this.program = program;\n        this.change = true;\n\n        this.BUFFER_COUNT = 0;\n        const buffers = this.getBuffers(this.fragmentString);\n        if (Object.keys(buffers).length) {\n            this.loadPrograms(buffers);\n        }\n        this.buffers = buffers;\n        this.texureIndex = this.BUFFER_COUNT;\n        \n        // Trigger event\n        this.trigger('load', {});\n\n        this.forceRender = true;\n        this.render();\n    }\n\n    test (callback, fragString, vertString) {\n        // Thanks to @thespite for the help here\n        // https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\n        let pre_test_vert = this.vertexString;\n        let pre_test_frag = this.fragmentString;\n        let pre_test_paused = this.paused;\n\n        let ext = this.gl.getExtension('EXT_disjoint_timer_query');\n        let query = ext.createQueryEXT();\n        let wasValid = this.isValid;\n\n        if (fragString || vertString) {\n            this.load(fragString, vertString);\n            wasValid = this.isValid;\n            this.forceRender = true;\n            this.render();\n        }\n\n        this.paused = true;\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        this.forceRender = true;\n        this.render();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n\n        let sandbox = this;\n        function finishTest() {\n            // Revert changes... go back to normal\n            sandbox.paused = pre_test_paused;\n            if (fragString || vertString) {\n                sandbox.load(pre_test_frag, pre_test_vert);\n            }\n        }\n        function waitForTest() {\n            sandbox.forceRender = true;\n            sandbox.render();\n            let available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n            let disjoint = sandbox.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            if (available && !disjoint) {\n                let ret = {\n                    wasValid: wasValid,\n                    frag: fragString || sandbox.fragmentString,\n                    vert: vertString || sandbox.vertexString,\n                    timeElapsedMs: ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT)/1000000.0\n                };\n                finishTest();\n                callback(ret);\n            } else {\n                window.requestAnimationFrame(waitForTest);\n            }\n        }\n        waitForTest();\n    }\n\n    loadTexture (name, urlElementOrData, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof urlElementOrData === 'string') {\n            options.url = urlElementOrData;\n        }\n        else if (typeof urlElementOrData === 'object' && urlElementOrData.data && urlElementOrData.width && urlElementOrData.height) {\n            options.data = urlElementOrData.data;\n            options.width = urlElementOrData.width;\n            options.height = urlElementOrData.height;\n        }\n        else if (typeof urlElementOrData === 'object') {\n            options.element = urlElementOrData;\n        }\n\n        if (this.textures[name]) {\n            if (this.textures[name]) {\n                this.textures[name].load(options);\n                this.textures[name].on('loaded', (args) => {\n                    this.forceRender = true;\n                });\n            }\n        }\n        else {\n            this.textures[name] = new Texture(this.gl, name, options);\n            this.textures[name].on('loaded', (args) => {\n                this.forceRender = true;\n            });\n        }\n\n    }\n\n    refreshUniforms() {\n        this.uniforms = {};\n    }\n\n    setUniform(name, ...value) {\n        let u = {};\n        u[name] = value;\n        this.setUniforms(u);\n    }\n\n    setUniforms(uniforms) {\n        let parsed = parseUniforms(uniforms);\n        // Set each uniform\n        for (let u in parsed) {\n            if (parsed[u].type === 'sampler2D') {\n                // For textures, we need to track texture units, so we have a special setter\n                // this.uniformTexture(parsed[u].name, parsed[u].value[0]);\n                this.loadTexture(parsed[u].name, parsed[u].value[0]);\n            }\n            else {\n                this.uniform(parsed[u].method, parsed[u].type, parsed[u].name, parsed[u].value);\n            }\n        }\n        this.forceRender = true;\n    }\n\n    setMouse(mouse) {\n        // set the mouse uniform\n        let rect = this.canvas.getBoundingClientRect();\n        if (mouse &&\n            mouse.x && mouse.x >= rect.left && mouse.x <= rect.right &&\n            mouse.y && mouse.y >= rect.top && mouse.y <= rect.bottom) {\n\n            let mouse_x = (mouse.x - rect.left ) * this.realToCSSPixels;\n            let mouse_y = (this.canvas.height - (mouse.y - rect.top) * this.realToCSSPixels);\n\n            this.uniform('2f', 'vec2', 'u_mouse', mouse_x, mouse_y);\n        }\n    }\n\n    // ex: program.uniform('3f', 'position', x, y, z);\n    uniform (method, type, name, ...value) { // 'value' is a method-appropriate arguments list\n        this.uniforms[name] = this.uniforms[name] || {}; \n        let uniform = this.uniforms[name];\n        let change = isDiff(uniform.value, value);\n\n        // remember and keep track of uniforms location to save calls\n        if (change || this.change || !uniform.location || !uniform.value) {\n            uniform.name = name;\n            uniform.type = type;\n            uniform.value = value;\n            uniform.method = 'uniform' + method;\n            this.gl.useProgram(this.program);\n            uniform.location = this.gl.getUniformLocation(this.program, name);\n            this.gl[uniform.method].apply(this.gl, [uniform.location].concat(uniform.value));\n            // If there is change update and there is buffer update manually one by one\n            for (let key in this.buffers) {\n                let buffer = this.buffers[key];\n                this.gl.useProgram(buffer.program);\n                let location = this.gl.getUniformLocation(buffer.program, name);\n                this.gl[uniform.method].apply(this.gl, [location].concat(uniform.value));\n            }\n        }\n    }\n\n    uniformTexture(name, texture, options) {\n        if (this.textures[name] === undefined) {\n            this.loadTexture(name, texture, options);\n        }\n        else {\n            this.uniform('1i', 'sampler2D', name, this.texureIndex)\n\n            for (let key in this.buffers) {\n                const buffer = this.buffers[key];\n                this.gl.useProgram(buffer.program);\n                this.gl.activeTexture(this.gl.TEXTURE0 + this.texureIndex);\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[name].texture);\n            }\n            this.gl.useProgram(this.program);\n            this.gl.activeTexture(this.gl.TEXTURE0 + this.texureIndex);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[name].texture);\n            this.uniform('2f', 'vec2', name + 'Resolution', this.textures[name].width, this.textures[name].height);\n        }\n    }\n\n    resize() {\n        if (this.width !== this.canvas.clientWidth ||\n            this.height !== this.canvas.clientHeight) {\n            this.realToCSSPixels = window.devicePixelRatio || 1;\n\n            // Lookup the size the browser is displaying the canvas in CSS pixels\n            // and compute a size needed to make our drawingbuffer match it in\n            // device pixels.\n            let displayWidth = Math.floor(this.gl.canvas.clientWidth * this.realToCSSPixels);\n            let displayHeight = Math.floor(this.gl.canvas.clientHeight * this.realToCSSPixels);\n\n            // Check if the canvas is not the same size.\n            if (this.gl.canvas.width !== displayWidth ||\n                this.gl.canvas.height !== displayHeight) {\n                // Make the canvas the same size\n                this.gl.canvas.width = displayWidth;\n                this.gl.canvas.height = displayHeight;\n                // Set the viewport to match\n                this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n            }\n            this.width = this.canvas.clientWidth;\n            this.height = this.canvas.clientHeight;\n            this.resizeSwappableBuffers();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    render () {\n        this.visible = isCanvasVisible(this.canvas);\n        if ( this.forceRender || this.change ||\n            (this.animated && this.visible && ! this.paused) ) {\n\n            // Update Uniforms when are need\n            let date = new Date();\n            let now = performance.now();\n            this.timeDelta =  (now - this.timePrev) / 1000.0;\n            this.timePrev = now;\n            if (this.nDelta > 1) {\n                // set the delta time uniform\n                this.uniform('1f', 'float', 'u_delta', this.timeDelta);\n            }\n\n            if (this.nTime > 1 ) {\n                // set the elapsed time uniform\n                this.uniform('1f', 'float', 'u_time', (now - this.timeLoad) / 1000.0);\n            }\n\n            if (this.nDate) {\n                // Set date uniform: year/month/day/time_in_sec\n                this.uniform('4f', 'float', 'u_date', date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001 );\n            }\n\n            // set the resolution uniform\n            this.uniform('2f', 'vec2', 'u_resolution', this.canvas.width, this.canvas.height);\n\n            for (let key in this.buffers) {\n                const buffer = this.buffers[key];\n                this.uniform('1i', 'sampler2D', buffer.name, buffer.bundle.input.index);\n            }\n\n            this.texureIndex = this.BUFFER_COUNT;\n            for (let tex in this.textures) {\n                this.uniformTexture(tex);\n                this.texureIndex++;\n            }\n\n            this.renderPrograms();\n\n            // Trigger event\n            this.trigger('render', {});\n            this.change = false;\n            this.forceRender = false;\n        }\n    }\n\n    pause () {\n        this.paused = true;\n    }\n\n    play () {\n        this.paused = false;\n    }\n\n    // render main and buffers programs\n    renderPrograms() {\n        const gl = this.gl;\n        const W = gl.canvas.width;\n        const H = gl.canvas.height;\n\n        gl.viewport(0, 0, W, H);\n\n        for (let key in this.buffers) {\n            const buffer = this.buffers[key];\n            buffer.bundle.render(W, H, buffer.program, buffer.name);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n\n        gl.useProgram(this.program);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // parse input strings\n    getBuffers(fragString) {\n        let buffers = {};\n        if (fragString) {\n            fragString.replace(/(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm, function () {\n                const i = arguments[3] || arguments[4];\n                buffers['u_buffer' + i] = {\n                    fragment: '#define BUFFER_' + i + '\\n' + fragString\n                };\n            });\n        }\n        return buffers;\n    }\n\n    // load buffers programs\n    loadPrograms(buffers) {\n        const glsl = this;\n        const gl = this.gl;\n        const vertex = createShader(glsl, glsl.vertexString, gl.VERTEX_SHADER);\n        for (let key in buffers) {\n            const buffer = buffers[key];\n            let fragment = createShader(glsl, buffer.fragment, gl.FRAGMENT_SHADER, 1);\n            if (!fragment) {\n                fragment = createShader(glsl, 'void main(){\\n\\tgl_FragColor = vec4(1.0);\\n}', gl.FRAGMENT_SHADER);\n                glsl.isValid = false;\n            } else {\n                glsl.isValid = true;\n            }\n            const program = createProgram(glsl, [vertex, fragment]);\n            buffer.name = key;\n            buffer.program = program;\n            buffer.bundle = glsl.createSwappableBuffer(glsl.canvas.width, glsl.canvas.height, program);\n            gl.deleteShader(fragment);\n        }\n        gl.deleteShader(vertex);\n    }\n\n    // create an input / output swappable buffer\n    createSwappableBuffer(W, H, program) {\n        var input = this.createBuffer(W, H, program);\n        var output = this.createBuffer(W, H, program);\n        const gl = this.gl;\n        return {\n            input: input,\n            output: output,\n            swap: function() {\n                var temp = input;\n                input = output;\n                output = temp;\n                this.input = input;\n                this.output = output;\n            },\n            render: function (W, H, program, name) {\n                gl.useProgram(program);\n                gl.viewport(0, 0, W, H);\n                gl.bindFramebuffer(gl.FRAMEBUFFER, this.input.buffer);\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\n                gl.drawArrays(gl.TRIANGLES, 0, 6);\n                this.swap();\n            },\n            resize: function (W, H, program, name) {\n                gl.useProgram(program);\n                gl.viewport(0, 0, W, H);\n                this.input.resize(W, H);\n                this.output.resize(W, H);\n            },\n        };\n    }\n\n    // create a buffers\n    createBuffer(W, H, program) {\n        const gl = this.gl;\n        let index = this.BUFFER_COUNT;\n        this.BUFFER_COUNT += 2;\n        gl.getExtension('OES_texture_float');\n        var texture = gl.createTexture();\n        gl.activeTexture(gl.TEXTURE0 + index);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.FLOAT, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        var buffer = gl.createFramebuffer();\n        return {\n            index: index,\n            texture: texture,\n            buffer: buffer,\n            W: W,\n            H: H,\n            resize: function(W, H) {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n                var minW = Math.min(W, this.W);\n                var minH = Math.min(H, this.H);\n                var pixels = new Float32Array(minW * minH * 4);\n                gl.readPixels(0, 0, minW, minH, gl.RGBA, gl.FLOAT, pixels);\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                var newIndex = index + 1;\n                var newTexture = gl.createTexture();\n                gl.activeTexture(gl.TEXTURE0 + newIndex);\n                gl.bindTexture(gl.TEXTURE_2D, newTexture);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.FLOAT, null);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, gl.FLOAT, pixels);\n                var newBuffer = gl.createFramebuffer();\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                gl.deleteTexture(texture);\n                gl.activeTexture(gl.TEXTURE0 + index);\n                gl.bindTexture(gl.TEXTURE_2D, newTexture);\n                index = this.index = index;\n                texture = this.texture = newTexture;\n                buffer = this.buffer = newBuffer;\n                this.W = W;\n                this.H = H;\n            },\n        };\n    }\n\n    // resize buffers on canvas resize\n    // consider applying a throttle of 50 ms on canvas resize\n    // to avoid requestAnimationFrame and Gl violations\n    resizeSwappableBuffers() {\n        const gl = this.gl;\n        const W = gl.canvas.width,\n            H = gl.canvas.height;\n        gl.viewport(0, 0, W, H);\n        for (let key in this.buffers) {\n            const buffer = this.buffers[key];\n            buffer.bundle.resize(W, H, buffer.program, buffer.name);\n        }\n        gl.useProgram(this.program);\n    }\n\n    version() {\n        return '0.1.7';\n    }\n}\n\nfunction loadAllGlslCanvas() {\n    var list = document.getElementsByClassName('glslCanvas');\n    if (list.length > 0) {\n        window.glslCanvases = [];\n        for (var i = 0; i < list.length; i++) {\n            var sandbox = new GlslCanvas(list[i]);\n            if (sandbox.isValid) {\n                window.glslCanvases.push(sandbox);\n            }\n        }\n    }\n}\n\nwindow.addEventListener('load', function () {\n    loadAllGlslCanvas();\n});"],"names":["window","global","self","fn","string","toString","call","setTimeout","alert","confirm","prompt","Object","prototype","trim","replace","headers","arg","result","headersArr","split","i","length","row","index","indexOf","key","slice","toLowerCase","value","push","target","arguments","source","hasOwnProperty","createXHR","initParams","uri","options","callback","params","isFunction","xtend","_createXHR","Error","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","e","getXml","isJson","JSON","parse","getBody","method","url","rawRequest","getAllResponseHeaders","parseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","obj","isEmpty","beforeSend","send","array","iterator","forEachArray","toUpperCase","lastError","GET_A_WEBGL_BROWSER","OTHER_PROBLEM","ERROR_BROWSER_SUPPORT","ERROR_OTHER","setupWebGL","canvas","optAttribs","onError","handleError","errorCode","msg","str","container","parentNode","innerHTML","WebGLRenderingContext","context","names","ii","getContext","create3DContext","getExtension","createShader","main","type","offset","gl","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","error","trigger","deleteShader","createProgram","shaders","optLocations","program","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","log","deleteProgram","isPowerOf2","subscribeMixin","listeners","Set","assign","f","listener","add","delete","item","keys","clear","event","Texture","name","this","texture","createTexture","valid","bind","sourceType","loading","setData","Uint8Array","filtering","setFiltering","load","deleteTexture","unit","activeUnit","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","setUrl","element","setElement","width","height","Promise","resolve","reject","ext","pop","isVideo","document","createElement","autoplay","muted","play","Image","_this","test","navigator","userAgent","crossOrigin","src","update","el","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","videoWidth","videoHeight","addEventListener","intervalID","setInterval","currentTime","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","complete","texImage2D","RGBA","UNSIGNED_BYTE","powerOf2","defualtFilter","texParameteri","TEXTURE_WRAP_S","repeat","REPEAT","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","LINEAR","generateMipmap","NEAREST","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","GlslCanvas","contextOptions","hasAttribute","getAttribute","clientWidth","clientHeight","innerWidth","innerHeight","textures","buffers","uniforms","vbo","isValid","animationFrameRequest","BUFFER_COUNT","vertexString","fragmentString","timeLoad","timePrev","performance","now","timeDelta","forceRender","paused","realToCSSPixels","devicePixelRatio","style","backgroundColor","get","texCoordsLoc","getAttribLocation","texCoords","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","verticesLoc","vertices","imgList","nImg","setUniform","mouse","x","clientX","pageX","y","clientY","pageY","sandbox","setMouse","RenderLoop","nMouse","resize","render","requestAnimationFrame","tex","animated","destroy","att","attribs","deleteBuffer","useProgram","buffer","fragString","vertString","lines","forEach","line","httpRequest","line_trim","startsWith","include_url","substring","nDelta","match","nTime","nDate","search","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","change","getBuffers","loadPrograms","texureIndex","pre_test_vert","pre_test_frag","pre_test_paused","query","createQueryEXT","wasValid","beginQueryEXT","TIME_ELAPSED_EXT","endQueryEXT","waitForTest","available","getQueryObjectEXT","QUERY_RESULT_AVAILABLE_EXT","disjoint","GPU_DISJOINT_EXT","ret","QUERY_RESULT_EXT","urlElementOrData","on","args","u","setUniforms","parsed","parseUniforms","prefix","uniform","Array","isArray","babelHelpers.typeof","loadTexture","rect","getBoundingClientRect","left","right","top","bottom","mouse_x","mouse_y","a","b","location","getUniformLocation","apply","concat","displayWidth","Math","floor","displayHeight","viewport","resizeSwappableBuffers","bound","visible","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","bundle","input","uniformTexture","renderPrograms","W","H","bindFramebuffer","FRAMEBUFFER","drawArrays","TRIANGLES","vertex","fragment","createSwappableBuffer","output","temp","framebufferTexture2D","COLOR_ATTACHMENT0","swap","createFramebuffer","minW","min","minH","pixels","readPixels","newIndex","newTexture","texSubImage2D","newBuffer","list","getElementsByClassName","glslCanvases"],"mappings":"mSAEsB,oBAAXA,OACDA,YACmB,IAAXC,EACRA,EACiB,oBAATC,KACRA,UCHV,SAAqBC,GACnB,IAAKA,EACH,OAAO,EAET,IAAIC,EAASC,EAASC,KAAKH,GAC3B,MAAkB,sBAAXC,GACU,mBAAPD,GAAgC,oBAAXC,GACV,oBAAXJ,SAENG,IAAOH,OAAOO,YACdJ,IAAOH,OAAOQ,OACdL,IAAOH,OAAOS,SACdN,IAAOH,OAAOU,SAdhBL,EAAWM,OAAOC,UAAUP,SCFhC,IAAIQ,EAAO,SAAST,GAClB,OAAOA,EAAOU,QAAQ,aAAc,OAMrB,SAAUC,GACzB,IAAKA,EACH,SAMF,IAJA,IARqBC,EAQjBC,KAEAC,EAAaL,EAAKE,GAASI,MAAM,MAE5BC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAK,CAC1C,IAAIE,EAAMJ,EAAWE,GACjBG,EAAQD,EAAIE,QAAQ,KACtBC,EAAMZ,EAAKS,EAAII,MAAM,EAAGH,IAAQI,cAChCC,EAAQf,EAAKS,EAAII,MAAMH,EAAQ,SAEL,IAAjBN,EAAOQ,GAChBR,EAAOQ,GAAOG,GAnBGZ,EAoBAC,EAAOQ,GAnBuB,mBAAxCd,OAAOC,UAAUP,SAASC,KAAKU,GAoBtCC,EAAOQ,GAAKI,KAAKD,GAEjBX,EAAOQ,IAASR,EAAOQ,GAAMG,IAIjC,OAAOX,KC1BT,WAGI,IAFA,IAAIa,KAEKV,EAAI,EAAGA,EAAIW,UAAUV,OAAQD,IAAK,CACvC,IAAIY,EAASD,UAAUX,GAEvB,IAAK,IAAIK,KAAOO,EACRC,EAAe3B,KAAK0B,EAAQP,KAC5BK,EAAOL,GAAOO,EAAOP,IAKjC,OAAOK,GAfPG,EAAiBtB,OAAOC,UAAUqB,eCItC,MAAiBC,IAEQA,EAyBzB,SAASC,EAAWC,EAAKC,EAASC,GAC9B,IAAIC,EAASH,EAYb,OAVII,EAAWH,IACXC,EAAWD,EACQ,iBAARD,IACPG,GAAUH,IAAIA,KAGlBG,EAASE,EAAMJ,GAAUD,IAAKA,IAGlCG,EAAOD,SAAWA,EACXC,EAGX,SAASL,EAAUE,EAAKC,EAASC,GAE7B,OAAOI,EADPL,EAAUF,EAAWC,EAAKC,EAASC,IAIvC,SAASI,EAAWL,GAChB,QAA+B,IAArBA,EAAQC,SACd,MAAM,IAAIK,MAAM,6BAGpB,IAAIC,GAAS,EACTN,EAAW,SAAgBO,EAAKC,EAAUC,GACtCH,IACAA,GAAS,EACTP,EAAQC,SAASO,EAAKC,EAAUC,KA6BxC,SAASC,EAAUC,GAMf,OALAC,aAAaC,GACRF,aAAeN,QAChBM,EAAM,IAAIN,MAAM,IAAMM,GAAO,kCAEjCA,EAAIG,WAAa,EACVd,EAASW,EAAKI,GAIzB,SAASC,IACL,IAAIC,EAAJ,CACA,IAAIC,EACJN,aAAaC,GAGTK,EAFDnB,EAAQoB,aAAuBC,IAAbC,EAAIH,OAEZ,IAEgB,OAAfG,EAAIH,OAAkB,IAAMG,EAAIH,OAE9C,IAAIV,EAAWO,EACXR,EAAM,KAiBV,OAfe,IAAXW,GACAV,GACIC,KA5CZ,WAEI,IAAIA,OAAOW,EAQX,GALIX,EADAY,EAAIb,SACGa,EAAIb,SAEJa,EAAIC,cAsJvB,SAAgBD,GAGZ,IACI,GAAyB,aAArBA,EAAIE,aACJ,OAAOF,EAAIG,YAEf,IAAIC,EAAwBJ,EAAIG,aAA4D,gBAA7CH,EAAIG,YAAYE,gBAAgBC,SAC/E,GAAyB,KAArBN,EAAIE,eAAwBE,EAC5B,OAAOJ,EAAIG,YAEjB,MAAOI,IAET,OAAO,KAnK4BC,CAAOR,GAGlCS,EACA,IACIrB,EAAOsB,KAAKC,MAAMvB,GACpB,MAAOmB,IAGb,OAAOnB,EA4BOwB,GACNnB,WAAYI,EACZgB,OAAQA,EACRzD,WACA0D,IAAKrC,EACLsC,WAAYf,GAEbA,EAAIgB,wBACH7B,EAAS/B,QAAU6D,EAAajB,EAAIgB,2BAGxC9B,EAAM,IAAIF,MAAM,iCAEbL,EAASO,EAAKC,EAAUA,EAASC,OAG5C,IAUItB,EACA8B,EAXAI,EAAMtB,EAAQsB,KAAO,KAEpBA,IAEGA,EADAtB,EAAQwC,MAAQxC,EAAQoB,OAClB,IAAIvB,EAAU4C,eAEd,IAAI5C,EAAU6C,gBAM5B,IAMI5B,EANAf,EAAMuB,EAAIc,IAAMpC,EAAQD,KAAOC,EAAQoC,IACvCD,EAASb,EAAIa,OAASnC,EAAQmC,QAAU,MACxCzB,EAAOV,EAAQU,MAAQV,EAAQ2C,KAC/BjE,EAAU4C,EAAI5C,QAAUsB,EAAQtB,YAChCkE,IAAS5C,EAAQ4C,KACjBb,GAAS,EAETf,GACAN,UAAMW,EACN3C,WACAqC,WAAY,EACZoB,OAAQA,EACRC,IAAKrC,EACLsC,WAAYf,GA0ChB,GAvCI,SAAUtB,IAA4B,IAAjBA,EAAQ6C,OAC7Bd,GAAS,EACTrD,EAAgB,QAAKA,EAAgB,SAAMA,EAAgB,OAAI,oBAChD,QAAXyD,GAA+B,SAAXA,IACpBzD,EAAQ,iBAAmBA,EAAQ,kBAAoBA,EAAQ,gBAAkB,oBACjFgC,EAAOsB,KAAKc,WAA2B,IAAjB9C,EAAQ6C,KAAgBnC,EAAOV,EAAQ6C,QAIrEvB,EAAIyB,mBAvGJ,WAC2B,IAAnBzB,EAAI0B,YACJ9E,WAAW+C,EAAU,IAsG7BK,EAAI2B,OAAShC,EACbK,EAAI4B,QAAUvC,EAEdW,EAAI6B,WAAa,aAGjB7B,EAAI8B,QAAU,WACVlC,GAAU,GAEdI,EAAI+B,UAAY1C,EAChBW,EAAIgC,KAAKnB,EAAQpC,GAAM6C,EAAM5C,EAAQuD,SAAUvD,EAAQwD,UAEnDZ,IACAtB,EAAImC,kBAAoBzD,EAAQyD,kBAK/Bb,GAAQ5C,EAAQ0D,QAAU,IAC3B5C,EAAe5C,WAAW,WACtB,IAAIgD,EAAJ,CACAA,GAAU,EACVI,EAAIqC,MAAM,WACV,IAAI9B,EAAI,IAAIvB,MAAM,0BAClBuB,EAAE+B,KAAO,YACTjD,EAAUkB,KACX7B,EAAQ0D,UAGXpC,EAAIuC,iBACJ,IAAIzE,KAAOV,EACJA,EAAQkB,eAAeR,IACtBkC,EAAIuC,iBAAiBzE,EAAKV,EAAQU,SAGvC,GAAIY,EAAQtB,UApLvB,SAAiBoF,GACb,IAAI,IAAI/E,KAAK+E,EACT,GAAGA,EAAIlE,eAAeb,GAAI,OAAO,EAErC,OAAO,EAgLwBgF,CAAQ/D,EAAQtB,SAC3C,MAAM,IAAI4B,MAAM,qDAkBpB,MAfI,iBAAkBN,IAClBsB,EAAIE,aAAexB,EAAQwB,cAG3B,eAAgBxB,GACc,mBAAvBA,EAAQgE,YAEfhE,EAAQgE,WAAW1C,GAMvBA,EAAI2C,KAAKvD,GAAQ,MAEVY,EAxNXzB,EAAU6C,eAAiB/E,EAAO+E,gBA6OlC,aA5OA7C,EAAU4C,eAAiB,wBAA0B5C,EAAU6C,eAAoB7C,EAAU6C,eAAiB/E,EAAO8E,eAUrH,SAAsByB,EAAOC,GACzB,IAAK,IAAIpF,EAAI,EAAGA,EAAImF,EAAMlF,OAAQD,IAC9BoF,EAASD,EAAMnF,IAVvBqF,EAAc,MAAO,MAAO,OAAQ,QAAS,OAAQ,UAAW,SAASjC,GACrEtC,EAAqB,WAAXsC,EAAsB,MAAQA,GAAU,SAASpC,EAAKC,EAASC,GAGrE,OAFAD,EAAUF,EAAWC,EAAKC,EAASC,IAC3BkC,OAASA,EAAOkC,cACjBhE,EAAWL,2kDChBtBsE,EAAY,GAuBhB,IAAIC,2IASAC,2JASSC,EAAwB,EAMxBC,EAAc,EAc3B,SAAgBC,EAAYC,EAAQC,EAAYC,YAQnCC,EAAYC,EAAWC,OAPdC,EACVC,EAOmB,mBAAZL,IACCE,IATEE,EAWDD,GAVTE,EAAYP,EAAOQ,gBAETC,UAxDX,4KAwDoCH,+CAYtCvH,OAAO2H,+BACIb,EAAuBF,GAC5B,SAGPgB,EAeR,SAAgCX,EAAQC,WAChCW,GAAS,QAAS,sBAClBD,EAAU,KACLE,EAAK,EAAGA,EAAKD,EAAMxG,SAAUyG,QAEpBb,EAAOc,WAAWF,EAAMC,GAAKZ,GACzC,MAAMhD,MACA0D,eAKLA,EA3BOI,CAAgBf,EAAQC,UACjCU,IAGOK,aAAa,8BAFTlB,EAAaF,GAItBe,EA2BX,SAAgBM,EAAaC,EAAMnG,EAAQoG,EAAMC,OACzCC,EAAKH,EAAKG,GAEVC,EAASD,EAAGJ,aAAaE,YAC1BI,aAAaD,EAAQvG,KACrByG,cAAcF,GAEFD,EAAGI,mBAAmBH,EAAQD,EAAGK,gBAiBzCJ,KAbSD,EAAGM,iBAAiBL,WACxBM,MAAM,8BAAgCN,EAAS,IAAM5B,KACxDmC,QAAQ,gBACDP,SACAvG,OACFoG,QACCzB,SACC0B,GAAU,MAEnBU,aAAaR,GACT,MAcf,SAAgBS,EAAcb,EAAMc,EAAS/B,EAAYgC,WACjDZ,EAAKH,EAAKG,GAEVa,EAAUb,EAAGU,gBACRlB,EAAK,EAAGA,EAAKmB,EAAQ5H,SAAUyG,IACjCsB,aAAaD,EAASF,EAAQnB,OAEjCZ,MACK,IAAIY,EAAK,EAAGA,EAAKZ,EAAW7F,SAAUyG,IACpCuB,mBACHF,EACAD,EAAeA,EAAapB,GAAMA,EAClCZ,EAAWY,aAGhBwB,YAAYH,GAGFb,EAAGiB,oBAAoBJ,EAASb,EAAGkB,aAQzCL,KALSb,EAAGmB,kBAAkBN,WACzBO,IAAI,4BAA8B/C,KACvCgD,cAAcR,GACV,MCxKf,SAAgBS,EAAWhI,UACU,IAAzBA,EAASA,EAAQ,GCPtB,SAASiI,EAAgB/H,OACxBgI,EAAY,IAAIC,WAEbpJ,OAAOqJ,OAAOlI,eAEdsG,EAAM6B,OACDC,OACK9B,GAAQ6B,IACPE,IAAID,iBAGd9B,EAAM6B,MACFA,EAAG,KACCC,OACK9B,GAAQ6B,IACPG,OAAOF,OAEhB,wCACgBJ,iDAAW,KAAnBO,6CACW1J,OAAO2J,KAAKD,kDAAO,cACnBjC,gBACEgC,OAAOC,uOAShBP,iDAAW,KAAnBO,kBACGX,IAAIW,sGAIVH,KACIC,IAAID,yBAGNA,KACEE,OAAOF,gCAIPK,0BAGNC,8BAAUxF,0FACO8E,iDAAW,KAAvBI,UAC0B,mBAApBA,EAASM,MACPA,aAAUxF,0FC7ClByF,wBACLnC,EAAIoC,OAAMrI,wEACHsI,WAEVrC,GAAKA,OACLsC,QAAUtC,EAAGuC,gBACdF,KAAKC,eACAE,OAAQ,QAEZC,YAEAL,KAAOA,OACP1I,OAAS,UACTgJ,WAAa,UACbC,QAAU,UAIVC,QAAQ,EAAG,EAAG,IAAIC,YAAY,EAAG,EAAG,EAAG,OAASC,UAAW,gBAC3DC,aAAahJ,EAAQ+I,gBAErBE,KAAKjJ,+CAKLsI,KAAKG,aAGLxC,GAAGiD,cAAcZ,KAAKC,cACtBA,QAAU,YACRD,KAAK3F,UACPA,KAAO,UACP8F,OAAQ,gCAGZU,GACIb,KAAKG,QAGU,iBAATU,GACHf,EAAQgB,aAAeD,SAClBlD,GAAGoD,cAAcf,KAAKrC,GAAGqD,SAAWH,KACjCC,WAAaD,GAGzBf,EAAQiB,gBAAkBf,KAAKC,eAC1BtC,GAAGsD,YAAYjB,KAAKrC,GAAGuD,WAAYlB,KAAKC,WACrCc,cAAgBf,KAAKC,6CAIhCvI,iEACI4I,QAAU,KAEY,iBAAhB5I,EAAQoC,SACEf,IAAbiH,KAAKlG,KAAqBpC,EAAQoC,MAAQkG,KAAKlG,UAC1CqH,OAAOzJ,EAAQoC,IAAKpC,GAGxBA,EAAQ0J,aACRC,WAAW3J,EAAQ0J,QAAS1J,GAE5BA,EAAQ2C,MAAQ3C,EAAQ4J,OAAS5J,EAAQ6J,aACzChB,QAAQ7I,EAAQ4J,MAAO5J,EAAQ6J,OAAQ7J,EAAQ2C,KAAM3C,kCAK3DoC,cAAKpC,+DACHsI,KAAKG,kBAILrG,IAAMA,OACNzC,OAAS2I,KAAKlG,SACduG,WAAa,WAEbC,QAAU,IAAIkB,QAAQ,SAACC,EAASC,OAC7BC,EAAM7H,EAAItD,MAAM,KAAKoL,MAAM5K,cAC3B6K,EAAmB,QAARF,GAAyB,SAARA,GAA0B,QAARA,EAE9CP,OAAUrI,EACV8I,MACUC,SAASC,cAAc,UACzBC,UAAW,IAGXC,OAAQ,aACL,aACCC,QACT,KAEKzB,UAAY,aAKV,IAAI0B,QAGVxH,OAAS,iBAEJ0G,WAAWD,EAAS1J,GAE7B,MAAO6B,WACKwF,gBAAgBqD,EAAKrC,gCAA+BqC,EAAK/K,WAAWkC,EAAG7B,KAE3E0K,MAEJxH,QAAU,oBAENmE,gBAAgBqD,EAAKrC,gCAA+BqC,EAAK/K,WAAWkC,EAAG7B,KACvE0K,qCF3GoBC,KAAKC,UAAUC,YEgHC,UAA5BH,EAAK/K,OAAON,MAAM,EAAG,OAC7ByL,YAAc,eAGlBC,IAAML,EAAK/K,OACfwK,KACKR,WAAWD,EAAS1J,KAG1BsI,KAAKM,wCAIRgB,EAAOC,EAAQlH,OAAM3C,wEACpB4J,MAAQA,OACRC,OAASA,OAETlK,OAASgD,OACTgG,WAAa,YAEbqC,OAAOhL,QACPgJ,aAAahJ,QAEb4I,QAAUkB,QAAQC,QAAQzB,MACxBA,KAAKM,2CAILc,EAAS1J,cACZiL,EAAKvB,KAGc,iBAAZA,MACGU,SAASc,cAAcxB,IAGjCA,aAAmByB,mBACnBzB,aAAmB0B,kBACnB1B,aAAmB2B,sBACd1L,OAAS+J,OACTf,WAAa,UAEde,aAAmB2B,uBACdzB,MAAQtB,KAAK3I,OAAO2L,gBACpBzB,OAASvB,KAAK3I,OAAO4L,cAClBC,iBAAiB,iBAAkB,aAClCC,WAAaC,YAAY,aACrBV,OAAOhL,IACb,MACJ,KACKwL,iBAAiB,QAAS,aACtBG,YAAc,IACdnB,SACT,SAEEQ,OAAOhL,QAEXgJ,aAAahJ,OAEjB,KACGiF,wCAA6CjD,KAAKc,UAAUmI,8FAExD5D,gBAAgBiB,KAAKD,WAAUpD,EAAOjF,eAG7C4I,QAAUkB,QAAQC,QAAQzB,MACxBA,KAAKM,6CAIT5I,4DACEsI,KAAKG,aAILC,YACAzC,GAAG2F,YAAYtD,KAAKrC,GAAG4F,qBAAsD,IAAhC7L,EAAQ6L,0BACrD5F,GAAG2F,YAAYtD,KAAKrC,GAAG6F,+BAAgC9L,EAAQ8L,iCAAkC,GAG9E,YAApBxD,KAAKK,aACHL,KAAK3I,kBAAkBwL,mBACvB7C,KAAK3I,kBAAkB0L,kBACvB/C,KAAK3I,kBAAkByL,kBAAoB9C,KAAK3I,OAAOoM,WACrDzD,KAAK3I,kBAAkB0L,uBAClBzB,MAAQtB,KAAK3I,OAAO2L,gBACpBzB,OAASvB,KAAK3I,OAAO4L,mBAErB3B,MAAQtB,KAAK3I,OAAOiK,WACpBC,OAASvB,KAAK3I,OAAOkK,aAEzB5D,GAAG+F,WAAW1D,KAAKrC,GAAGuD,WAAY,EAAGlB,KAAKrC,GAAGgG,KAAM3D,KAAKrC,GAAGgG,KAAM3D,KAAKrC,GAAGiG,cAAe5D,KAAK3I,SAGzE,SAApB2I,KAAKK,iBACL1C,GAAG+F,WAAW1D,KAAKrC,GAAGuD,WAAY,EAAGlB,KAAKrC,GAAGgG,KAAM3D,KAAKsB,MAAOtB,KAAKuB,OAAQ,EAAGvB,KAAKrC,GAAGgG,KAAM3D,KAAKrC,GAAGiG,cAAe5D,KAAK3I,aAE7H8G,QAAQ,SAAU6B,kDAIbtI,+DACLsI,KAAKG,YAIL0D,SAAW5E,EAAWe,KAAKsB,QAAUrC,EAAWe,KAAKuB,YACtDuC,EAAiB9D,KAAK6D,SAAW,SAAW,cAC3CpD,UAAY/I,EAAQ+I,WAAaqD,MAElCnG,EAAKqC,KAAKrC,QACTyC,OAMDJ,KAAK6D,YACFE,cAAcpG,EAAGuD,WAAYvD,EAAGqG,eAAgBtM,EAAQsM,gBAAmBtM,EAAQuM,QAAUtG,EAAGuG,QAAWvG,EAAGwG,iBAC9GJ,cAAcpG,EAAGuD,WAAYvD,EAAGyG,eAAgB1M,EAAQ0M,gBAAmB1M,EAAQuM,QAAUtG,EAAGuG,QAAWvG,EAAGwG,eAE1F,WAAnBnE,KAAKS,aACFsD,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG2G,wBACvDP,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG6G,UACvDC,eAAe9G,EAAGuD,aAEG,WAAnBlB,KAAKS,aACPsD,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG6G,UACvDT,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG6G,SAElC,YAAnBxE,KAAKS,cACPsD,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG+G,WACvDX,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG+G,cAM3DX,cAAcpG,EAAGuD,WAAYvD,EAAGqG,eAAgBrG,EAAGwG,iBACnDJ,cAAcpG,EAAGuD,WAAYvD,EAAGyG,eAAgBzG,EAAGwG,eAE/B,WAAnBnE,KAAKS,iBACAA,UAAY,UAGE,YAAnBT,KAAKS,aACFsD,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG+G,WACvDX,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG+G,aAGvDX,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG6G,UACvDT,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG6G,oBAM1E1E,EACQ6E,kBAAoB,SAAUhH,UAC3BA,EAAGiH,aAAajH,EAAGkH,mBAI9B/E,EAAQgB,YAAc,ECvQtB,IAMqBgE,wBACLxI,EAAQyI,EAAgBrN,0BACjBsI,QAEE+E,QACPrN,OAEN4E,EAAO0I,aAAa,oBACuB,KAA1C1I,EAAO2I,aAAa,oBACqB,QAA1C3I,EAAO2I,aAAa,yBAOf3D,MAAQhF,EAAO4I,iBACf3D,OAASjF,EAAO6I,oBANhB7D,MAAQjM,OAAO+P,gBACf7D,OAASlM,OAAOgQ,cACd/D,MAAQjM,OAAO+P,aACf7D,OAASlM,OAAOgQ,kBAMtB/I,OAASA,OACTqB,QAAK5E,OACLyF,aAAUzF,OACVuM,iBACAC,gBACAC,iBACAC,YACAC,SAAU,OACVC,2BAAwB5M,OAExB6M,aAAe,OAGfC,aAAed,EAAec,+PAe9BC,eAAiBf,EAAee,uJAajCnI,EAAKtB,EAAWC,EAAQyI,EAAgBrN,EAAQ8E,YAC/CmB,WAGAA,GAAKA,OACLoI,SAAW/F,KAAKgG,SAAWC,YAAYC,WACvCC,UAAY,OACZC,aAAc,OACdC,QAAS,OACTC,gBAAkBjR,OAAOkR,kBAAoB,IAG3CC,MAAMC,gBAAkB1B,EAAe0B,iBAAmB,gBAG7DnK,EAAO0I,aAAa,sBACfc,eAAiBxJ,EAAO2I,aAAa,sBAEzC,GAAI3I,EAAO0I,aAAa,qBAAsB,KAC3C3N,EAASiF,EAAO2I,aAAa,uBAC7ByB,IAAIrP,EAAQ,SAAC6G,EAAO/F,EAAUC,KACzBuI,KAAKvI,EAAMgK,EAAKyD,mBAKzBvJ,EAAO0I,aAAa,oBACfa,aAAevJ,EAAO2I,aAAa,oBAEvC,GAAI3I,EAAO0I,aAAa,mBAAoB,KACzC3N,EAASiF,EAAO2I,aAAa,qBAC7ByB,IAAIrP,EAAQ,SAAC6G,EAAO/F,EAAUC,KACzBuI,KAAKyB,EAAK0D,eAAgB1N,aAIlCuI,OAEAX,KAAKxB,aAKNmI,EAAehJ,EAAGiJ,kBAAkB5G,KAAKxB,QAAS,mBACjDiH,IAAIoB,UAAYlJ,EAAGmJ,oBACnBnJ,GAAGoJ,WAAWpJ,EAAGqJ,aAAchH,KAAKyF,IAAIoB,gBACxClJ,GAAGsJ,WAAWtJ,EAAGqJ,aAAc,IAAIE,cAAc,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAOvJ,EAAGwJ,kBAClHxJ,GAAGyJ,wBAAwBT,QAC3BhJ,GAAG0J,oBAAoBV,EAAc,EAAGhJ,EAAG2J,OAAO,EAAO,EAAG,OAE7DC,EAAc5J,EAAGiJ,kBAAkB5G,KAAKxB,QAAS,sBAChDiH,IAAI+B,SAAW7J,EAAGmJ,oBAClBnJ,GAAGoJ,WAAWpJ,EAAGqJ,aAAchH,KAAKyF,IAAI+B,eACxC7J,GAAGsJ,WAAWtJ,EAAGqJ,aAAc,IAAIE,eAAe,GAAM,EAAK,GAAM,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,IAAOvJ,EAAGwJ,kBACxHxJ,GAAGyJ,wBAAwBG,QAC3B5J,GAAG0J,oBAAoBE,EAAa,EAAG5J,EAAG2J,OAAO,EAAO,EAAG,GAG5DhL,EAAO0I,aAAa,iBAAkB,KAClCyC,EAAUnL,EAAO2I,aAAa,iBAAiBzO,MAAM,SACpD,IAAIkR,KAAQD,OACRE,WAAW,QAAUD,EAAMD,EAAQC,QAK5CE,KACG,IACA,YAEE1E,iBAAiB,YAAa,SAAC3J,KAC9BsO,EAAItO,EAAEuO,SAAWvO,EAAEwO,QACnBC,EAAIzO,EAAE0O,SAAW1O,EAAE2O,QAC1B,OAECC,EAAUnI,iBAeToI,UAAWP,EAAG,EAAGG,EAAG,aAdhBK,IACDF,EAAQG,OAAS,KACTF,SAASR,GAGjBO,EAAQI,aACAnC,aAAc,KAGlBoC,WACA7C,sBAAwBtQ,OAAOoT,sBAAsBJ,MAM1DrI,uDASF,IAAI0I,0BAJY1I,KAAK2F,4BAErBgD,UAAW,OACXjD,SAAU,EACC1F,KAAKsF,SACboD,EAAIE,WACAA,cAIP,IAAIC,UADJvD,YACWtF,KAAK8I,aACZnL,GAAGoL,aAAa/I,KAAK8I,QAAQD,QAIjC,IAAI/R,UAFJ6G,GAAGqL,WAAW,WACdrL,GAAGqB,cAAcgB,KAAKxB,SACXwB,KAAKuF,QAAS,KACpB0D,EAASjJ,KAAKuF,QAAQzO,QACvB6G,GAAGqB,cAAciK,EAAOzK,cAG5BA,QAAU,UACVb,GAAK,kCAGRuL,EAAYC,cAGVA,SACKtD,aAAesD,GAIpBD,SACKpD,eAAiBoD,OAGtBE,EAAQpJ,KAAK8F,eAAetP,MAAM,iBACjCsP,eAAiB,6BAEhBuD,QAAS,SAACC,EAAM7S,OHrLNqD,EAChByP,EGqLQC,EAAYF,EAAKpT,UACjBsT,EAAUC,WAAW,mBAAsB,KACvCC,EAAcF,EAAUG,UAAU,MACxB,oBAAsBD,EAAYvT,QAAQ,eAAe,MAClE2P,iBH1LGhM,EG0LuB4P,GHzLvCH,EAAc,IAAInP,gBACVY,KAAK,MAAOlB,GAAK,KACjB6B,QACc,KAAtB4N,EAAY1Q,OACL0Q,EAAYtQ,aAEZ,IGmL+C,aAGzC6M,gBAAkBwD,EAAO,YAIjCX,UAAW,OACXiB,QAAU5J,KAAK8F,eAAe+D,MAAM,iBAAmBnT,YACvDoT,OAAS9J,KAAK8F,eAAe+D,MAAM,gBAAkBnT,YACrDqT,OAAS/J,KAAK8F,eAAe+D,MAAM,gBAAkBnT,YACrD4R,QAAUtI,KAAK8F,eAAe+D,MAAM,iBAAmBnT,YACvDiS,SAAW3I,KAAK+J,MAAQ,GAAK/J,KAAK8J,MAAQ,GAAK9J,KAAKsI,OAAS,EAElDtI,KAAK8F,eAAekE,OAAO,sBAEnCZ,EAAQpJ,KAAK8F,eAAetP,MAAM,MAC7BC,EAAI,EAAGA,EAAI2S,EAAM1S,OAAQD,IAAK,KAC/BoT,EAAQT,EAAM3S,GAAGoT,MAAM,uEACvBA,EAAO,KACHlI,EAAMkI,EAAM,GAAGrT,MAAM,KAAKoL,MAAM5K,cAChC6S,EAAM,IAAMA,EAAM,KACT,QAARlI,GAAyB,SAARA,GAA0B,QAARA,GAC3B,QAARA,GAAyB,SAARA,GAA0B,QAARA,SAC/BgG,WAAWkC,EAAM,GAAIA,EAAM,OAG7BT,EAAM3S,GAAGoT,MAAM,gCAO9BI,EAAe1M,EAAayC,KAAMA,KAAK6F,aAAc7F,KAAKrC,GAAGuM,eAC7DC,EAAiB5M,EAAayC,KAAMA,KAAK8F,eAAgB9F,KAAKrC,GAAGyM,iBAGhED,OAKIzE,SAAU,KAJEnI,EAAayC,KAAM,+CAAgDA,KAAKrC,GAAGyM,sBACvF1E,SAAU,OAOflH,EAAUH,EAAc2B,MAAOiK,EAAcE,SAC5CxM,GAAGqL,WAAWxK,QAKdb,GAAGS,aAAa6L,QAChBtM,GAAGS,aAAa+L,QAEhB3L,QAAUA,OACV6L,QAAS,OAETzE,aAAe,MACdL,EAAUvF,KAAKsK,WAAWtK,KAAK8F,gBACjC9P,OAAO2J,KAAK4F,GAAS7O,aAChB6T,aAAahF,QAEjBA,QAAUA,OACViF,YAAcxK,KAAK4F,kBAGnBzH,QAAQ,gBAERiI,aAAc,OACdoC,sCAGH7Q,EAAUuR,EAAYC,OAGpBsB,EAAgBzK,KAAK6F,aACrB6E,EAAgB1K,KAAK8F,eACrB6E,EAAkB3K,KAAKqG,OAEvB1E,EAAM3B,KAAKrC,GAAGL,aAAa,4BAC3BsN,EAAQjJ,EAAIkJ,iBACZC,EAAW9K,KAAK0F,SAEhBwD,GAAcC,UACTxI,KAAKuI,EAAYC,KACXnJ,KAAK0F,aACXU,aAAc,OACdoC,eAGJnC,QAAS,IACV0E,cAAcpJ,EAAIqJ,iBAAkBJ,QACnCxE,aAAc,OACdoC,WACDyC,YAAYtJ,EAAIqJ,sBAEhB7C,EAAUnI,eAQLkL,MACG9E,aAAc,IACdoC,aACJ2C,EAAYxJ,EAAIyJ,kBAAkBR,EAAOjJ,EAAI0J,4BAC7CC,EAAWnD,EAAQxK,GAAGiH,aAAajD,EAAI4J,qBACvCJ,IAAcG,EAAU,KACpBE,YACUV,OACJ5B,GAAcf,EAAQrC,oBACtBqD,GAAchB,EAAQtC,2BACblE,EAAIyJ,kBAAkBR,EAAOjJ,EAAI8J,kBAAkB,OAflEpF,OAASsE,GACbzB,GAAcC,MACNxI,KAAK+J,EAAeD,KAgBnBe,eAEF/C,sBAAsByC,0CAM5BnL,EAAM2L,EAAkBhU,cAC5BA,UAI2B,iBAArBgU,IACC5R,IAAM4R,EAEmB,qBAArBA,gBAAAA,KAAiCA,EAAiBrR,MAAQqR,EAAiBpK,OAASoK,EAAiBnK,UACzGlH,KAAOqR,EAAiBrR,OACxBiH,MAAQoK,EAAiBpK,QACzBC,OAASmK,EAAiBnK,QAED,qBAArBmK,gBAAAA,QACJtK,QAAUsK,GAGlB1L,KAAKsF,SAASvF,GACVC,KAAKsF,SAASvF,UACTuF,SAASvF,GAAMY,KAAKjJ,QACpB4N,SAASvF,GAAM4L,GAAG,SAAU,SAACC,KACzBxF,aAAc,WAKtBd,SAASvF,GAAQ,IAAID,EAAQE,KAAKrC,GAAIoC,EAAMrI,QAC5C4N,SAASvF,GAAM4L,GAAG,SAAU,SAACC,KACzBxF,aAAc,oDAOtBZ,+CAGEzF,WACH8L,wBADY5U,qDAEd8I,GAAQ9I,OACL6U,YAAYD,uCAGTrG,OACJuG,EJ9NZ,SAAgBC,EAAcxG,OAAUyG,yDAAS,KACzCF,SAEC,IAAIhM,KAAQyF,EAAU,KACnB0G,EAAU1G,EAASzF,GACnB8L,YAEAI,MACOA,EAAS,IAAMlM,GAIH,iBAAZmM,IACAhV,WACG,eACE,kBAEDgV,SAIV,GAAIC,MAAMC,QAAQF,OAEO,iBAAfA,EAAQ,GAEQ,IAAnBA,EAAQxV,SACDQ,WACG,eACE,kBAEDgV,IAINA,EAAQxV,QAAU,GAAKwV,EAAQxV,QAAU,IACvCQ,WACG,MAAQgV,EAAQxV,cACdwV,EAAQxV,OAAS,kBAElBwV,IAINA,EAAQxV,OAAS,KACfQ,WACG,iBACE,WACF6I,EAAO,YACNmM,SAMd,GAA0B,iBAAfA,EAAQ,KACbhV,WACG,mBACE,UACF6I,QACCmM,SAIV,GAAIC,MAAMC,QAAQF,EAAQ,KAAgC,iBAAlBA,EAAQ,GAAG,OAEhDA,EAAQ,GAAGxV,QAAU,GAAKwV,EAAQ,GAAGxV,QAAU,MAE1CmV,EAAI,EAAGA,EAAIK,EAAQxV,OAAQmV,MACrB3U,WACG,MAAQgV,EAAQ,GAAGxV,cACjBwV,EAAQL,GAAGnV,OAAS,UACtBqJ,EAAO,IAAM8L,EAAI,UAChBK,EAAQL,UAO1B,GAA0B,WAAtBQ,EAAOH,EAAQ,QACfL,EAAI,EAAGA,EAAIK,EAAQxV,OAAQmV,MAErB3U,eAAQ8U,EAAcE,EAAQL,GAAI9L,EAAO,IAAM8L,EAAI,WAK1C,kBAAZK,IACLhV,WACG,cACE,kBAEDgV,IAIa,iBAAZA,IACLhV,WACG,mBACE,kBAEDgV,IAIa,qBAAZA,gBAAAA,OAELhV,eAAQ8U,EAAcE,EAASnM,YAIvCgM,EI+GUC,CAAcxG,OAEtB,IAAIqG,KAAKE,EACa,cAAnBA,EAAOF,GAAGpO,UAGL6O,YAAYP,EAAOF,GAAG9L,KAAMgM,EAAOF,GAAG5U,MAAM,SAG5CiV,QAAQH,EAAOF,GAAGhS,OAAQkS,EAAOF,GAAGpO,KAAMsO,EAAOF,GAAG9L,KAAMgM,EAAOF,GAAG5U,YAG5EmP,aAAc,mCAGdwB,OAED2E,EAAOvM,KAAK1D,OAAOkQ,2BACnB5E,GACAA,EAAMC,GAAKD,EAAMC,GAAK0E,EAAKE,MAAQ7E,EAAMC,GAAK0E,EAAKG,OACnD9E,EAAMI,GAAKJ,EAAMI,GAAKuE,EAAKI,KAAO/E,EAAMI,GAAKuE,EAAKK,OAAQ,KAEtDC,GAAWjF,EAAMC,EAAI0E,EAAKE,MAASzM,KAAKsG,gBACxCwG,EAAW9M,KAAK1D,OAAOiF,QAAUqG,EAAMI,EAAIuE,EAAKI,KAAO3M,KAAKsG,qBAE3D4F,QAAQ,KAAM,OAAQ,UAAWW,EAASC,oCAK9CjT,EAAQ4D,EAAMsC,QACdyF,SAASzF,GAAQC,KAAKwF,SAASzF,eAChCmM,EAAUlM,KAAKwF,SAASzF,sBAFA9I,uDH3Yb8V,EAAGC,MAAHD,EG8YKb,EAAQjV,MH9YV+V,EG8YiB/V,KH7YnC8V,IAAKC,IACED,EAAErX,aAAesX,EAAEtX,aG+YZsK,KAAKqK,SAAW6B,EAAQe,WAAaf,EAAQjV,UASlD,IAAIH,OARDiJ,KAAOA,IACPtC,KAAOA,IACPxG,MAAQA,IACR4C,OAAS,UAAYA,OACxB8D,GAAGqL,WAAWhJ,KAAKxB,WAChByO,SAAWjN,KAAKrC,GAAGuP,mBAAmBlN,KAAKxB,QAASuB,QACvDpC,GAAGuO,EAAQrS,QAAQsT,MAAMnN,KAAKrC,IAAKuO,EAAQe,UAAUG,OAAOlB,EAAQjV,QAEzD+I,KAAKuF,QAAS,KACtB0D,EAASjJ,KAAKuF,QAAQzO,QACrB6G,GAAGqL,WAAWC,EAAOzK,aACtByO,EAAWjN,KAAKrC,GAAGuP,mBAAmBjE,EAAOzK,QAASuB,QACrDpC,GAAGuO,EAAQrS,QAAQsT,MAAMnN,KAAKrC,IAAKsP,GAAUG,OAAOlB,EAAQjV,gDAK9D8I,EAAME,EAASvI,WACEqB,IAAxBiH,KAAKsF,SAASvF,QACTuM,YAAYvM,EAAME,EAASvI,OAE/B,KAGI,IAAIZ,UAFJoV,QAAQ,KAAM,YAAanM,EAAMC,KAAKwK,aAE3BxK,KAAKuF,QAAS,KACpB0D,EAASjJ,KAAKuF,QAAQzO,QACvB6G,GAAGqL,WAAWC,EAAOzK,cACrBb,GAAGoD,cAAcf,KAAKrC,GAAGqD,SAAWhB,KAAKwK,kBACzC7M,GAAGsD,YAAYjB,KAAKrC,GAAGuD,WAAYlB,KAAKsF,SAASvF,GAAME,cAE3DtC,GAAGqL,WAAWhJ,KAAKxB,cACnBb,GAAGoD,cAAcf,KAAKrC,GAAGqD,SAAWhB,KAAKwK,kBACzC7M,GAAGsD,YAAYjB,KAAKrC,GAAGuD,WAAYlB,KAAKsF,SAASvF,GAAME,cACvDiM,QAAQ,KAAM,OAAQnM,EAAO,aAAcC,KAAKsF,SAASvF,GAAMuB,MAAOtB,KAAKsF,SAASvF,GAAMwB,6CAK/FvB,KAAKsB,QAAUtB,KAAK1D,OAAO4I,aAC3BlF,KAAKuB,SAAWvB,KAAK1D,OAAO6I,aAAc,MACrCmB,gBAAkBjR,OAAOkR,kBAAoB,MAK9C8G,EAAeC,KAAKC,MAAMvN,KAAKrC,GAAGrB,OAAO4I,YAAclF,KAAKsG,iBAC5DkH,EAAgBF,KAAKC,MAAMvN,KAAKrC,GAAGrB,OAAO6I,aAAenF,KAAKsG,wBAG9DtG,KAAKrC,GAAGrB,OAAOgF,QAAU+L,GACzBrN,KAAKrC,GAAGrB,OAAOiF,SAAWiM,SAErB7P,GAAGrB,OAAOgF,MAAQ+L,OAClB1P,GAAGrB,OAAOiF,OAASiM,OAEnB7P,GAAG8P,SAAS,EAAG,EAAGzN,KAAKrC,GAAGrB,OAAOgF,MAAOtB,KAAKrC,GAAGrB,OAAOiF,cAE3DD,MAAQtB,KAAK1D,OAAO4I,iBACpB3D,OAASvB,KAAK1D,OAAO6I,kBACrBuI,0BACE,SAEA,mCHtfZ,IAAyBpR,EACxBqR,UG0fKC,SH3fmBtR,EG2fO0D,KAAK1D,QH1fpCqR,EAAQrR,EAAOkQ,yBACJG,IAAMgB,EAAMpM,OAAU,GAChCoM,EAAMhB,KAAOtX,OAAOgQ,aAAevD,SAASzI,gBAAgB8L,eGyfxDnF,KAAKoG,aAAepG,KAAKqK,QACzBrK,KAAK2I,UAAY3I,KAAK4N,UAAa5N,KAAKqG,OAAU,KAG/CwH,EAAO,IAAIC,KACX5H,EAAMD,YAAYC,UAqBjB,IAAIpP,UApBJqP,WAAcD,EAAMlG,KAAKgG,UAAY,SACrCA,SAAWE,EACZlG,KAAK4J,OAAS,QAETsC,QAAQ,KAAM,QAAS,UAAWlM,KAAKmG,WAG5CnG,KAAK8J,MAAQ,QAERoC,QAAQ,KAAM,QAAS,UAAWhG,EAAMlG,KAAK+F,UAAY,KAG9D/F,KAAK+J,YAEAmC,QAAQ,KAAM,QAAS,SAAU2B,EAAKE,cAAeF,EAAKG,WAAYH,EAAKI,UAA6B,KAAlBJ,EAAKK,WAAwC,GAApBL,EAAKM,aAAoBN,EAAKO,aAAwC,KAAzBP,EAAKQ,wBAIrKnC,QAAQ,KAAM,OAAQ,eAAgBlM,KAAK1D,OAAOgF,MAAOtB,KAAK1D,OAAOiF,QAE1DvB,KAAKuF,QAAS,KACpB0D,EAASjJ,KAAKuF,QAAQzO,QACvBoV,QAAQ,KAAM,YAAajD,EAAOlJ,KAAMkJ,EAAOqF,OAAOC,MAAM3X,WAIhE,IAAI8R,UADJ8B,YAAcxK,KAAK4F,aACR5F,KAAKsF,cACZkJ,eAAe9F,QACf8B,mBAGJiE,sBAGAtQ,QAAQ,kBACRkM,QAAS,OACTjE,aAAc,wCAKlBC,QAAS,sCAITA,QAAS,+CAKR1I,EAAKqC,KAAKrC,GACV+Q,EAAI/Q,EAAGrB,OAAOgF,MACdqN,EAAIhR,EAAGrB,OAAOiF,WAIf,IAAIzK,OAFN2W,SAAS,EAAG,EAAGiB,EAAGC,GAEL3O,KAAKuF,QAAS,KACpB0D,EAASjJ,KAAKuF,QAAQzO,KACrBwX,OAAO9F,OAAOkG,EAAGC,EAAG1F,EAAOzK,QAASyK,EAAOlJ,QAC/C6O,gBAAgBjR,EAAGkR,YAAa,QAGpC7F,WAAWhJ,KAAKxB,WAChBsQ,WAAWnR,EAAGoR,UAAW,EAAG,sCAIxB7F,OACH3D,YACA2D,KACW/S,QAAQ,8GAA+G,eACxHM,EAAIW,UAAU,IAAMA,UAAU,KAC5B,WAAaX,aACP,kBAAoBA,EAAI,KAAOyS,KAI9C3D,uCAIEA,OAEH5H,EAAKqC,KAAKrC,GACVqR,EAASzR,EAFFyC,KAAAA,KAE0B6F,aAAclI,EAAGuM,mBACnD,IAAIpT,KAAOyO,EAAS,KACf0D,EAAS1D,EAAQzO,GACnBmY,EAAW1R,EALNyC,KAKyBiJ,EAAOgG,SAAUtR,EAAGyM,gBAAiB,GAClE6E,EANIjP,KAUA0F,SAAU,KAHJnI,EAPNyC,KAOyB,+CAAgDrC,EAAGyM,iBAP5EpK,KAQA0F,SAAU,OAIblH,EAAUH,EAZP2B,MAY4BgP,EAAQC,MACtClP,KAAOjJ,IACP0H,QAAUA,IACV8P,OAfEtO,KAeYkP,sBAfZlP,KAeuC1D,OAAOgF,MAf9CtB,KAe0D1D,OAAOiF,OAAQ/C,KAC/EJ,aAAa6Q,KAEjB7Q,aAAa4Q,iDAIEN,EAAGC,EAAGnQ,OACpB+P,EAAQvO,KAAK8G,aAAa4H,EAAGC,EAAGnQ,GAChC2Q,EAASnP,KAAK8G,aAAa4H,EAAGC,EAAGnQ,GAC/Bb,EAAKqC,KAAKrC,gBAEL4Q,SACCY,OACF,eACEC,EAAOb,IACHY,IACCC,OACJb,MAAQA,OACRY,OAASA,UAEV,SAAUT,EAAGC,EAAGnQ,EAASuB,KAC1BiJ,WAAWxK,KACXiP,SAAS,EAAG,EAAGiB,EAAGC,KAClBC,gBAAgBjR,EAAGkR,YAAa7O,KAAKuO,MAAMtF,UAC3CoG,qBAAqB1R,EAAGkR,YAAalR,EAAG2R,kBAAmB3R,EAAGuD,WAAYlB,KAAKmP,OAAOlP,QAAS,KAC/F6O,WAAWnR,EAAGoR,UAAW,EAAG,QAC1BQ,eAED,SAAUb,EAAGC,EAAGnQ,EAASuB,KAC1BiJ,WAAWxK,KACXiP,SAAS,EAAG,EAAGiB,EAAGC,QAChBJ,MAAMhG,OAAOmG,EAAGC,QAChBQ,OAAO5G,OAAOmG,EAAGC,0CAMrBD,EAAGC,EAAGnQ,OACTb,EAAKqC,KAAKrC,GACZ/G,EAAQoJ,KAAK4F,kBACZA,cAAgB,IAClBtI,aAAa,yBACZ2C,EAAUtC,EAAGuC,kBACda,cAAcpD,EAAGqD,SAAWpK,KAC5BqK,YAAYtD,EAAGuD,WAAYjB,KAC3ByD,WAAW/F,EAAGuD,WAAY,EAAGvD,EAAGgG,KAAM+K,EAAGC,EAAG,EAAGhR,EAAGgG,KAAMhG,EAAG2J,MAAO,QAClEvD,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG+G,WACvDX,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG+G,WACvDX,cAAcpG,EAAGuD,WAAYvD,EAAGqG,eAAgBrG,EAAGwG,iBACnDJ,cAAcpG,EAAGuD,WAAYvD,EAAGyG,eAAgBzG,EAAGwG,mBAClD8E,EAAStL,EAAG6R,iCAEL5Y,UACEqJ,SACDgJ,IACLyF,IACAC,SACK,SAASD,EAAGC,KACbC,gBAAgBjR,EAAGkR,YAAa5F,OAC/BwG,EAAOnC,KAAKoC,IAAIhB,EAAG1O,KAAK0O,GACxBiB,EAAOrC,KAAKoC,IAAIf,EAAG3O,KAAK2O,GACxBiB,EAAS,IAAI1I,aAAauI,EAAOE,EAAO,KACzCE,WAAW,EAAG,EAAGJ,EAAME,EAAMhS,EAAGgG,KAAMhG,EAAG2J,MAAOsI,KAChDhB,gBAAgBjR,EAAGkR,YAAa,UAC/BiB,EAAWlZ,EAAQ,EACnBmZ,EAAapS,EAAGuC,kBACjBa,cAAcpD,EAAGqD,SAAW8O,KAC5B7O,YAAYtD,EAAGuD,WAAY6O,KAC3BrM,WAAW/F,EAAGuD,WAAY,EAAGvD,EAAGgG,KAAM+K,EAAGC,EAAG,EAAGhR,EAAGgG,KAAMhG,EAAG2J,MAAO,QAClEvD,cAAcpG,EAAGuD,WAAYvD,EAAG0G,mBAAoB1G,EAAG+G,WACvDX,cAAcpG,EAAGuD,WAAYvD,EAAG4G,mBAAoB5G,EAAG+G,WACvDX,cAAcpG,EAAGuD,WAAYvD,EAAGqG,eAAgBrG,EAAGwG,iBACnDJ,cAAcpG,EAAGuD,WAAYvD,EAAGyG,eAAgBzG,EAAGwG,iBACnD6L,cAAcrS,EAAGuD,WAAY,EAAG,EAAG,EAAGuO,EAAME,EAAMhS,EAAGgG,KAAMhG,EAAG2J,MAAOsI,OACpEK,EAAYtS,EAAG6R,sBAChBZ,gBAAgBjR,EAAGkR,YAAa,QAChCjO,cAAcX,KACdc,cAAcpD,EAAGqD,SAAWpK,KAC5BqK,YAAYtD,EAAGuD,WAAY6O,KACtB/P,KAAKpJ,MAAQA,IACXoJ,KAAKC,QAAU8P,IAChB/P,KAAKiJ,OAASgH,OAClBvB,EAAIA,OACJC,EAAIA,yDASXhR,EAAKqC,KAAKrC,GACV+Q,EAAI/Q,EAAGrB,OAAOgF,MAChBqN,EAAIhR,EAAGrB,OAAOiF,WAEb,IAAIzK,OADN2W,SAAS,EAAG,EAAGiB,EAAGC,GACL3O,KAAKuF,QAAS,KACpB0D,EAASjJ,KAAKuF,QAAQzO,KACrBwX,OAAO/F,OAAOmG,EAAGC,EAAG1F,EAAOzK,QAASyK,EAAOlJ,QAEnDiJ,WAAWhJ,KAAKxB,iDAIZ,wBAiBfnJ,OAAO6N,iBAAiB,OAAQ,2BAZxBgN,EAAOpO,SAASqO,uBAAuB,iBACvCD,EAAKxZ,OAAS,EAAG,QACV0Z,oBACF,IAAI3Z,EAAI,EAAGA,EAAIyZ,EAAKxZ,OAAQD,IAAK,KAC9B0R,EAAU,IAAIrD,EAAWoL,EAAKzZ,IAC9B0R,EAAQzC,gBACD0K,aAAalZ,KAAKiR"}